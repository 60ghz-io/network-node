From 5cf80f41bfc32457ed2221c3420207eafdc2b58f Mon Sep 17 00:00:00 2001
From: Anand Singh <anandsingh@fb.com>
Date: Mon, 20 May 2019 15:30:11 -0700
Subject: [PATCH] Add ls1048atg board

---
 arch/arm/Kconfig                        |  15 +
 arch/arm/cpu/armv8/Kconfig              |   1 +
 arch/arm/dts/Makefile                   |   1 +
 arch/arm/dts/fsl-ls1048a-tg.dts         |   3 +-
 board/freescale/ls1048a/Kconfig         |  36 +-
 board/freescale/ls1048a/MAINTAINERS     |  15 +-
 board/freescale/ls1048a/Makefile        |   7 +-
 board/freescale/ls1048a/eth_ls1048atg.c |  29 +-
 board/freescale/ls1048a/ls1048a.c       | 325 +-------------
 configs/ls1048atg_qspi_defconfig        |  62 +++
 configs/ls1048atg_sdcard_qspi_defconfig |   8 +-
 drivers/net/ldpaa_eth/ldpaa_eth.c       |   4 -
 include/configs/ls1048atg.h             | 566 ++++--------------------
 include/configs/ls1088a_common.h        |   3 +
 14 files changed, 209 insertions(+), 866 deletions(-)
 create mode 100644 configs/ls1048atg_qspi_defconfig

diff --git a/arch/arm/Kconfig b/arch/arm/Kconfig
index a8e274e88c..09b81252c8 100644
--- a/arch/arm/Kconfig
+++ b/arch/arm/Kconfig
@@ -1147,6 +1147,20 @@ config TARGET_LS1088ARDB
 	  development platform that supports the QorIQ LS1088A
 	  Layerscape Architecture processor.
 
+config TARGET_LS1048ATG
+	bool "Support ls1048atg"
+	select ARCH_LS1088A
+	select ARM64
+	select ARMV8_MULTIENTRY
+	select ARCH_MISC_INIT
+	select BOARD_LATE_INIT
+	select SUPPORT_SPL
+	help
+	  Support for NXP LS1048ATG platform.
+	  The LS1048A TG board (DN 2.0) is a cost-optimized
+	  client node for Terragraph network using QorIQ LS1048A
+	  Layerscape Architecture processor.
+
 config TARGET_LS1021AQDS
 	bool "Support ls1021aqds"
 	select ARCH_LS1021A
@@ -1495,6 +1509,7 @@ source "board/freescale/ls2080a/Kconfig"
 source "board/freescale/ls2080aqds/Kconfig"
 source "board/freescale/ls2080ardb/Kconfig"
 source "board/freescale/ls1088a/Kconfig"
+source "board/freescale/ls1048a/Kconfig"
 source "board/freescale/ls1021aqds/Kconfig"
 source "board/freescale/ls1043aqds/Kconfig"
 source "board/freescale/ls1021atwr/Kconfig"
diff --git a/arch/arm/cpu/armv8/Kconfig b/arch/arm/cpu/armv8/Kconfig
index 7dff2f8910..ad88b6c16b 100644
--- a/arch/arm/cpu/armv8/Kconfig
+++ b/arch/arm/cpu/armv8/Kconfig
@@ -101,6 +101,7 @@ config PSCI_RESET
 		   !TARGET_LS2080ARDB && !TARGET_LS2080A_EMU && \
 		   !TARGET_LS1088ARDB && !TARGET_LS1088AQDS && \
 		   !TARGET_LS1012ARDB && !TARGET_LS1012AFRDM && \
+		   !TARGET_LS1048ATG && \
 		   !TARGET_LS1012A2G5RDB && !TARGET_LS1012AQDS && \
 		   !TARGET_LS1012AFRWY && \
 		   !TARGET_LS1043ARDB && !TARGET_LS1043AQDS && \
diff --git a/arch/arm/dts/Makefile b/arch/arm/dts/Makefile
index a8aeec4a10..8b54fee2fb 100644
--- a/arch/arm/dts/Makefile
+++ b/arch/arm/dts/Makefile
@@ -226,6 +226,7 @@ dtb-$(CONFIG_FSL_LSCH3) += fsl-ls2080a-qds.dtb \
 	fsl-ls2081a-rdb.dtb \
 	fsl-ls2088a-rdb-qspi.dtb \
 	fsl-ls1088a-rdb.dtb \
+	fsl-ls1048a-tg.dtb \
 	fsl-ls1088a-qds.dtb \
 	fsl-lx2160a-rdb.dtb \
 	fsl-lx2160a-qds.dtb
diff --git a/arch/arm/dts/fsl-ls1048a-tg.dts b/arch/arm/dts/fsl-ls1048a-tg.dts
index f30bbb7247..b60d5d440f 100644
--- a/arch/arm/dts/fsl-ls1048a-tg.dts
+++ b/arch/arm/dts/fsl-ls1048a-tg.dts
@@ -5,12 +5,13 @@
  * Copyright 2017 NXP
  */
 
+/* LS1048-ATG Needs Fixing */
 /dts-v1/;
 
 #include "fsl-ls1088a.dtsi"
 
 / {
-	model = "NXP Layerscape 1088a RDB Board";
+	model = "NXP Layerscape 1048a TG Board";
 	compatible = "fsl,ls1088a-rdb", "fsl,ls1088a";
 	aliases {
 		spi0 = &qspi;
diff --git a/board/freescale/ls1048a/Kconfig b/board/freescale/ls1048a/Kconfig
index 8bb828e3fd..9b51b23c4c 100644
--- a/board/freescale/ls1048a/Kconfig
+++ b/board/freescale/ls1048a/Kconfig
@@ -1,7 +1,7 @@
-if TARGET_LS1088AQDS
+if TARGET_LS1048ATG
 
 config SYS_BOARD
-	default "ls1088a"
+	default "ls1048a"
 
 config SYS_VENDOR
 	default "freescale"
@@ -10,7 +10,7 @@ config SYS_SOC
 	default "fsl-layerscape"
 
 config SYS_CONFIG_NAME
-	default "ls1088aqds"
+	default "ls1048atg"
 
 if FSL_LS_PPA
 config SYS_LS_PPA_FW_ADDR
@@ -29,33 +29,3 @@ endif
 source "board/freescale/common/Kconfig"
 endif
 
-if TARGET_LS1088ARDB
-
-config SYS_BOARD
-	default "ls1088a"
-
-config SYS_VENDOR
-	default "freescale"
-
-config SYS_SOC
-	default "fsl-layerscape"
-
-config SYS_CONFIG_NAME
-	default "ls1088ardb"
-
-if FSL_LS_PPA
-config SYS_LS_PPA_FW_ADDR
-        hex "PPA Firmware Addr"
-	default 0x20400000 if SYS_LS_PPA_FW_IN_XIP
-	default 0x400000 if SYS_LS_PPA_FW_IN_MMC || SYS_LS_PPA_FW_IN_NAND
-
-if CHAIN_OF_TRUST
-config SYS_LS_PPA_ESBC_ADDR
-	hex "PPA Firmware HDR Addr"
-	default 0x20680000 if SYS_LS_PPA_FW_IN_XIP
-	default 0x680000 if SYS_LS_PPA_FW_IN_MMC || SYS_LS_PPA_FW_IN_NAND
-endif
-endif
-
-source "board/freescale/common/Kconfig"
-endif
diff --git a/board/freescale/ls1048a/MAINTAINERS b/board/freescale/ls1048a/MAINTAINERS
index bca9969637..c7b667d455 100644
--- a/board/freescale/ls1048a/MAINTAINERS
+++ b/board/freescale/ls1048a/MAINTAINERS
@@ -1,13 +1,10 @@
-LS1088ARDB BOARD
-M:	Prabhakar Kushwaha <prabhakar.kushwaha@nxp.com>
-M:	Ashish Kumar <Ashish.Kumar@nxp.com>
-M:	Rajesh Bhagat <rajesh.bhagat@nxp.com>
+LS1048ATG BOARD
 S:	Maintained
-F:	board/freescale/ls1088a/
-F:	include/configs/ls1088ardb.h
-F:	configs/ls1088ardb_qspi_defconfig
-F:	configs/ls1088ardb_sdcard_qspi_defconfig
-F:	configs/ls1088ardb_tfa_defconfig
+F:	board/freescale/ls1048a/
+F:	include/configs/ls1048atg.h
+F:	configs/ls1048ardb_qspi_defconfig
+F:	configs/ls1048ardb_sdcard_qspi_defconfig
+F:	configs/ls1048ardb_tfa_defconfig
 
 LS1088AQDS BOARD
 M:	Prabhakar Kushwaha <prabhakar.kushwaha@nxp.com>
diff --git a/board/freescale/ls1048a/Makefile b/board/freescale/ls1048a/Makefile
index c2b0e7dc0f..cca2cbbfe0 100644
--- a/board/freescale/ls1048a/Makefile
+++ b/board/freescale/ls1048a/Makefile
@@ -2,9 +2,8 @@
 #
 # Copyright 2017 NXP
 
-obj-y += ls1088a.o
-obj-y += ddr.o
+obj-y += ls1048a.o
+obj-y += ../ls1088a/ddr.o
 ifndef CONFIG_SPL_BUILD
-obj-$(CONFIG_TARGET_LS1088ARDB) += eth_ls1088ardb.o
-obj-$(CONFIG_TARGET_LS1088AQDS) += eth_ls1088aqds.o
+obj-$(CONFIG_TARGET_LS1048ATG) += eth_ls1048atg.o
 endif
diff --git a/board/freescale/ls1048a/eth_ls1048atg.c b/board/freescale/ls1048a/eth_ls1048atg.c
index 0af8054971..9360505490 100644
--- a/board/freescale/ls1048a/eth_ls1048atg.c
+++ b/board/freescale/ls1048a/eth_ls1048atg.c
@@ -40,36 +40,20 @@ int board_eth_init(bd_t *bis)
 	/* Register the EMI 1 */
 	fm_memac_mdio_init(bis, &mdio_info);
 
-	reg = (struct memac_mdio_controller *)CONFIG_SYS_FSL_WRIOP1_MDIO2;
-	mdio_info.regs = reg;
-	mdio_info.name = DEFAULT_WRIOP_MDIO2_NAME;
-
-	/* Register the EMI 2 */
-	fm_memac_mdio_init(bis, &mdio_info);
-
 	switch (srds_s1) {
-	case 0x1D:
+	case 0x15:
 		/*
 		 * XFI does not need a PHY to work, but to avoid U-boot use
 		 * default PHY address which is zero to a MAC when it found
 		 * a MAC has no PHY address, we give a PHY address to XFI
 		 * MAC error.
 		 */
-		wriop_set_phy_address(WRIOP1_DPMAC1, 0, 0x0a);
-		wriop_set_phy_address(WRIOP1_DPMAC2, 0, AQ_PHY_ADDR1);
-		wriop_set_phy_address(WRIOP1_DPMAC3, 0, QSGMII1_PORT1_PHY_ADDR);
-		wriop_set_phy_address(WRIOP1_DPMAC4, 0, QSGMII1_PORT2_PHY_ADDR);
-		wriop_set_phy_address(WRIOP1_DPMAC5, 0, QSGMII1_PORT3_PHY_ADDR);
-		wriop_set_phy_address(WRIOP1_DPMAC6, 0, QSGMII1_PORT4_PHY_ADDR);
-		wriop_set_phy_address(WRIOP1_DPMAC7, 0, QSGMII2_PORT1_PHY_ADDR);
-		wriop_set_phy_address(WRIOP1_DPMAC8, 0, QSGMII2_PORT2_PHY_ADDR);
-		wriop_set_phy_address(WRIOP1_DPMAC9, 0, QSGMII2_PORT3_PHY_ADDR);
-		wriop_set_phy_address(WRIOP1_DPMAC10, 0,
-				      QSGMII2_PORT4_PHY_ADDR);
+		wriop_set_phy_address(WRIOP1_DPMAC2, 0, 1);
+		wriop_set_phy_address(WRIOP1_DPMAC7, 0, 2);
 
 		break;
 	default:
-		printf("SerDes1 protocol 0x%x is not supported on LS1088ARDB\n",
+		printf("SerDes1 protocol 0x%x is not supported on LS1048ATG\n",
 		       srds_s1);
 		break;
 	}
@@ -77,7 +61,7 @@ int board_eth_init(bd_t *bis)
 	for (i = WRIOP1_DPMAC3; i <= WRIOP1_DPMAC10; i++) {
 		interface = wriop_get_enet_if(i);
 		switch (interface) {
-		case PHY_INTERFACE_MODE_QSGMII:
+		case PHY_INTERFACE_MODE_SGMII:
 			dev = miiphy_get_dev_by_name(DEFAULT_WRIOP_MDIO1_NAME);
 			wriop_set_mdio(i, dev);
 			break;
@@ -86,9 +70,6 @@ int board_eth_init(bd_t *bis)
 		}
 	}
 
-	dev = miiphy_get_dev_by_name(DEFAULT_WRIOP_MDIO2_NAME);
-	wriop_set_mdio(WRIOP1_DPMAC2, dev);
-
 	cpu_eth_init(bis);
 #endif /* CONFIG_FMAN_ENET */
 
diff --git a/board/freescale/ls1048a/ls1048a.c b/board/freescale/ls1048a/ls1048a.c
index ab79855571..f73b1fb9d6 100644
--- a/board/freescale/ls1048a/ls1048a.c
+++ b/board/freescale/ls1048a/ls1048a.c
@@ -21,8 +21,6 @@
 #include <asm/arch/fsl_serdes.h>
 #include <asm/arch/soc.h>
 
-#include "../common/qixis.h"
-#include "ls1088a_qixis.h"
 #include "../common/vid.h"
 #include <fsl_immap.h>
 
@@ -152,26 +150,6 @@ int board_early_init_f(void)
 	return 0;
 }
 
-#ifdef CONFIG_FSL_QIXIS
-unsigned long long get_qixis_addr(void)
-{
-	unsigned long long addr;
-
-	if (gd->flags & GD_FLG_RELOC)
-		addr = QIXIS_BASE_PHYS;
-	else
-		addr = QIXIS_BASE_PHYS_EARLY;
-
-	/*
-	 * IFC address under 256MB is mapped to 0x30000000, any address above
-	 * is mapped to 0x5_10000000 up to 4GB.
-	 */
-	addr = addr  > 0x10000000 ? addr + 0x500000000ULL : addr + 0x30000000;
-
-	return addr;
-}
-#endif
-
 #if defined(CONFIG_VID)
 int init_func_vid(void)
 {
@@ -184,12 +162,6 @@ int init_func_vid(void)
 
 int is_pb_board(void)
 {
-	u8 board_id;
-
-	board_id = QIXIS_READ(id);
-	if (board_id == LS1088ARDB_PB_BOARD)
-		return 1;
-	else
 		return 0;
 }
 
@@ -207,34 +179,11 @@ int checkboard(void)
 	enum boot_src src = get_boot_src();
 #endif
 	char buf[64];
-	u8 sw;
-	static const char *const freq[] = {"100", "125", "156.25",
-					    "100 separate SSCG"};
-	int clock;
 
-#ifdef CONFIG_TARGET_LS1088AQDS
-	printf("Board: LS1088A-QDS, ");
-#else
-	if (is_pb_board())
-		printf("Board: LS1088ARDB-PB, ");
-	else
-		printf("Board: LS1088A-RDB, ");
-#endif
-
-	sw = QIXIS_READ(arch);
-	printf("Board Arch: V%d, ", sw >> 4);
-
-#ifdef CONFIG_TARGET_LS1088AQDS
-	printf("Board version: %c, boot from ", (sw & 0xf) + 'A' - 1);
-#else
-	printf("Board version: %c, boot from ", (sw & 0xf) + 'A');
-#endif
+	printf("Board: LS1048A-TG, ");
 
 	memset((u8 *)buf, 0x00, ARRAY_SIZE(buf));
 
-	sw = QIXIS_READ(brdcfg[0]);
-	sw = (sw & QIXIS_LBMAP_MASK) >> QIXIS_LBMAP_SHIFT;
-
 #ifdef CONFIG_TFABOOT
 	if (src == BOOT_SOURCE_SD_MMC)
 		puts("SD card\n");
@@ -243,152 +192,27 @@ int checkboard(void)
 	puts("SD card\n");
 #endif
 #endif /* CONFIG_TFABOOT */
-	switch (sw) {
-#ifdef CONFIG_TARGET_LS1088AQDS
-	case 0:
-	case 1:
-	case 2:
-	case 3:
-	case 4:
-	case 5:
-	case 6:
-	case 7:
-		printf("vBank: %d\n", sw);
-		break;
-	case 8:
-		puts("PromJet\n");
-		break;
-	case 15:
-		puts("IFCCard\n");
-		break;
-	case 14:
-#else
-	case 0:
-#endif
-		puts("QSPI:");
-		sw = QIXIS_READ(brdcfg[0]);
-		sw = (sw & QIXIS_QMAP_MASK) >> QIXIS_QMAP_SHIFT;
-		if (sw == 0 || sw == 4)
-			puts("0\n");
-		else if (sw == 1)
-			puts("1\n");
-		else
-			puts("EMU\n");
-		break;
-
-	default:
-		printf("invalid setting of SW%u\n", QIXIS_LBMAP_SWITCH);
-		break;
-	}
-
-#ifdef CONFIG_TARGET_LS1088AQDS
-	printf("FPGA: v%d (%s), build %d",
-	       (int)QIXIS_READ(scver), qixis_read_tag(buf),
-	       (int)qixis_read_minor());
-	/* the timestamp string contains "\n" at the end */
-	printf(" on %s", qixis_read_time(buf));
-#else
-	printf("CPLD: v%d.%d\n", QIXIS_READ(scver), QIXIS_READ(tagdata));
-#endif
-
-	/*
-	 * Display the actual SERDES reference clocks as configured by the
-	 * dip switches on the board.  Note that the SWx registers could
-	 * technically be set to force the reference clocks to match the
-	 * values that the SERDES expects (or vice versa).  For now, however,
-	 * we just display both values and hope the user notices when they
-	 * don't match.
-	 */
-	puts("SERDES1 Reference : ");
-	sw = QIXIS_READ(brdcfg[2]);
-	clock = (sw >> 6) & 3;
-	printf("Clock1 = %sMHz ", freq[clock]);
-	clock = (sw >> 4) & 3;
-	printf("Clock2 = %sMHz", freq[clock]);
-
-	puts("\nSERDES2 Reference : ");
-	clock = (sw >> 2) & 3;
-	printf("Clock1 = %sMHz ", freq[clock]);
-	clock = (sw >> 0) & 3;
-	printf("Clock2 = %sMHz\n", freq[clock]);
 
 	return 0;
 }
 #endif
 
-bool if_board_diff_clk(void)
-{
-#ifdef CONFIG_TARGET_LS1088AQDS
-	u8 diff_conf = QIXIS_READ(brdcfg[11]);
-	return diff_conf & 0x40;
-#else
-	u8 diff_conf = QIXIS_READ(dutcfg[11]);
-	return diff_conf & 0x80;
-#endif
-}
-
 unsigned long get_board_sys_clk(void)
 {
-	u8 sysclk_conf = QIXIS_READ(brdcfg[1]);
-
-	switch (sysclk_conf & 0x0f) {
-	case QIXIS_SYSCLK_83:
-		return 83333333;
-	case QIXIS_SYSCLK_100:
-		return 100000000;
-	case QIXIS_SYSCLK_125:
-		return 125000000;
-	case QIXIS_SYSCLK_133:
-		return 133333333;
-	case QIXIS_SYSCLK_150:
-		return 150000000;
-	case QIXIS_SYSCLK_160:
-		return 160000000;
-	case QIXIS_SYSCLK_166:
-		return 166666666;
-	}
-
-	return 66666666;
+	return CONFIG_SYS_CLK_FREQ;
 }
 
 unsigned long get_board_ddr_clk(void)
 {
-	u8 ddrclk_conf = QIXIS_READ(brdcfg[1]);
-
-	if (if_board_diff_clk())
-		return get_board_sys_clk();
-	switch ((ddrclk_conf & 0x30) >> 4) {
-	case QIXIS_DDRCLK_100:
-		return 100000000;
-	case QIXIS_DDRCLK_125:
-		return 125000000;
-	case QIXIS_DDRCLK_133:
-		return 133333333;
-	}
-
-	return 66666666;
+	return CONFIG_DDR_CLK_FREQ;
 }
 
-int select_i2c_ch_pca9547(u8 ch)
-{
-	int ret;
-
-	ret = i2c_write(I2C_MUX_PCA_ADDR_PRI, 0, 1, &ch, 1);
-	if (ret) {
-		puts("PCA: failed to select proper channel\n");
-		return ret;
-	}
-
-	return 0;
-}
-
-#if !defined(CONFIG_SPL_BUILD)
 void board_retimer_init(void)
 {
 	u8 reg;
 
-	/* Retimer is connected to I2C1_CH5 */
-	select_i2c_ch_pca9547(I2C_MUX_CH5);
+	/* Retimer is connected to I2C4 */
+	i2c_set_bus_num(3);
 
 	/* Access to Control/Shared register */
 	reg = 0x0;
@@ -427,7 +251,7 @@ void board_retimer_init(void)
 
 #ifdef	CONFIG_TARGET_LS1088AQDS
 	/* Retimer is connected to I2C1_CH5 */
-	select_i2c_ch_pca9547(I2C_MUX_CH5);
+	//select_i2c_ch_pca9547(I2C_MUX_CH5);
 
 	/* Access to Control/Shared register */
 	reg = 0x0;
@@ -465,160 +289,29 @@ void board_retimer_init(void)
 	i2c_write(I2C_RETIMER_ADDR2, 0x2F, 1, &reg, 1);
 #endif
 	/*return the default channel*/
-	select_i2c_ch_pca9547(I2C_MUX_CH_DEFAULT);
+	i2c_set_bus_num(I2C_CH_DEFAULT);
 }
 
 #ifdef CONFIG_MISC_INIT_R
 int misc_init_r(void)
-{
-#ifdef CONFIG_TARGET_LS1088ARDB
-	u8 brdcfg5;
-
-	if (hwconfig("esdhc-force-sd")) {
-		brdcfg5 = QIXIS_READ(brdcfg[5]);
-		brdcfg5 &= ~BRDCFG5_SPISDHC_MASK;
-		brdcfg5 |= BRDCFG5_FORCE_SD;
-		QIXIS_WRITE(brdcfg[5], brdcfg5);
-	}
-#endif
-	return 0;
-}
-#endif
-#endif
-
-int i2c_multiplexer_select_vid_channel(u8 channel)
-{
-	return select_i2c_ch_pca9547(channel);
-}
-
-#ifdef CONFIG_TARGET_LS1088AQDS
-/* read the current value(SVDD) of the LTM Regulator Voltage */
-int get_serdes_volt(void)
-{
-	int  ret, vcode = 0;
-	u8 chan = PWM_CHANNEL0;
-
-	/* Select the PAGE 0 using PMBus commands PAGE for VDD */
-	ret = i2c_write(I2C_SVDD_MONITOR_ADDR,
-			PMBUS_CMD_PAGE, 1, &chan, 1);
-	if (ret) {
-		printf("VID: failed to select VDD Page 0\n");
-		return ret;
-	}
-
-	/* Read the output voltage using PMBus command READ_VOUT */
-	ret = i2c_read(I2C_SVDD_MONITOR_ADDR,
-		       PMBUS_CMD_READ_VOUT, 1, (void *)&vcode, 2);
-	if (ret) {
-		printf("VID: failed to read the volatge\n");
-		return ret;
-	}
-
-	return vcode;
-}
-
-int set_serdes_volt(int svdd)
-{
-	int ret, vdd_last;
-	u8 buff[5] = {0x04, PWM_CHANNEL0, PMBUS_CMD_VOUT_COMMAND,
-			svdd & 0xFF, (svdd & 0xFF00) >> 8};
-
-	/* Write the desired voltage code to the SVDD regulator */
-	ret = i2c_write(I2C_SVDD_MONITOR_ADDR,
-			PMBUS_CMD_PAGE_PLUS_WRITE, 1, (void *)&buff, 5);
-	if (ret) {
-		printf("VID: I2C failed to write to the volatge regulator\n");
-		return -1;
-	}
-
-	/* Wait for the volatge to get to the desired value */
-	do {
-		vdd_last = get_serdes_volt();
-		if (vdd_last < 0) {
-			printf("VID: Couldn't read sensor abort VID adjust\n");
-			return -1;
-		}
-	} while (vdd_last != svdd);
-
-	return 1;
-}
-#else
-int get_serdes_volt(void)
 {
 	return 0;
 }
-
-int set_serdes_volt(int svdd)
-{
-	int ret;
-	u8 brdcfg4;
-
-	printf("SVDD changing of RDB\n");
-
-	/* Read the BRDCFG54 via CLPD */
-	ret = i2c_read(CONFIG_SYS_I2C_FPGA_ADDR,
-		       QIXIS_BRDCFG4_OFFSET, 1, (void *)&brdcfg4, 1);
-	if (ret) {
-		printf("VID: I2C failed to read the CPLD BRDCFG4\n");
-		return -1;
-	}
-
-	brdcfg4 = brdcfg4 | 0x08;
-
-	/* Write to the BRDCFG4 */
-	ret = i2c_write(CONFIG_SYS_I2C_FPGA_ADDR,
-			QIXIS_BRDCFG4_OFFSET, 1, (void *)&brdcfg4, 1);
-	if (ret) {
-		debug("VID: I2C failed to set the SVDD CPLD BRDCFG4\n");
-		return -1;
-	}
-
-	/* Wait for the volatge to get to the desired value */
-	udelay(10000);
-
-	return 1;
-}
 #endif
 
-/* this function disables the SERDES, changes the SVDD Voltage and enables it*/
-int board_adjust_vdd(int vdd)
-{
-	int ret = 0;
-
-	debug("%s: vdd = %d\n", __func__, vdd);
-
-	/* Special settings to be performed when voltage is 900mV */
-	if (vdd == 900) {
-		ret = setup_serdes_volt(vdd);
-		if (ret < 0) {
-			ret = -1;
-			goto exit;
-		}
-	}
-exit:
-	return ret;
-}
-
 #if !defined(CONFIG_SPL_BUILD)
 int board_init(void)
 {
 	init_final_memctl_regs();
-#if defined(CONFIG_TARGET_LS1088ARDB) && defined(CONFIG_FSL_MC_ENET)
-	u32 __iomem *irq_ccsr = (u32 __iomem *)ISC_BASE;
-#endif
 
-	select_i2c_ch_pca9547(I2C_MUX_CH_DEFAULT);
+	/* Retimer is connected to I2C4 */
+	i2c_set_bus_num(4);
 	board_retimer_init();
 
 #ifdef CONFIG_ENV_IS_NOWHERE
 	gd->env_addr = (ulong)&default_environment[0];
 #endif
 
-#if defined(CONFIG_TARGET_LS1088ARDB) && defined(CONFIG_FSL_MC_ENET)
-	/* invert AQR105 IRQ pins polarity */
-	out_le32(irq_ccsr + IRQCR_OFFSET / 4, AQR105_IRQ_MASK);
-#endif
-
 #ifdef CONFIG_FSL_CAAM
 	sec_init();
 #endif
diff --git a/configs/ls1048atg_qspi_defconfig b/configs/ls1048atg_qspi_defconfig
new file mode 100644
index 0000000000..0ba14eca1e
--- /dev/null
+++ b/configs/ls1048atg_qspi_defconfig
@@ -0,0 +1,62 @@
+CONFIG_ARM=y
+CONFIG_TARGET_LS1048ATG=y
+CONFIG_SYS_TEXT_BASE=0x20010000
+CONFIG_FSL_LS_PPA=y
+CONFIG_QSPI_AHB_INIT=y
+CONFIG_DISTRO_DEFAULTS=y
+CONFIG_NR_DRAM_BANKS=2
+#
+# CONFIG_SYS_MALLOC_F is not set
+CONFIG_FIT_VERBOSE=y
+CONFIG_OF_BOARD_SETUP=y
+CONFIG_OF_STDOUT_VIA_ALIAS=y
+CONFIG_SYS_EXTRA_OPTIONS="SYS_FSL_DDR4, QSPI_BOOT"
+CONFIG_HUSH_PARSER=y
+CONFIG_USE_BOOTARGS=y
+CONFIG_BOOTARGS="console=ttyS0,115200 root=/dev/ram0 earlycon=uart8250,mmio,0x21c0500 ramdisk_size=0x3000000 default_hugepagesz=2m hugepagesz=2m hugepages=256"
+# CONFIG_USE_BOOTCOMMAND is not set
+CONFIG_MISC_INIT_R=y
+# CONFIG_DISPLAY_BOARDINFO is not set
+CONFIG_DISPLAY_BOARDINFO_LATE=y
+CONFIG_CMD_GREPENV=y
+CONFIG_CMD_MEMTEST=y
+CONFIG_CMD_I2C=y
+CONFIG_CMD_MMC=y
+CONFIG_CMD_SF=y
+# CONFIG_CMD_SETEXPR is not set
+CONFIG_MP=y
+CONFIG_CMD_DHCP=y
+CONFIG_CMD_PING=y
+CONFIG_OF_CONTROL=y
+CONFIG_DEFAULT_DEVICE_TREE="fsl-ls1048a-tg"
+CONFIG_ENV_IS_IN_SPI_FLASH=y
+CONFIG_NET_RANDOM_ETHADDR=y
+CONFIG_DM=y
+CONFIG_SCSI_AHCI=y
+CONFIG_FSL_ESDHC=y
+CONFIG_DM_SPI_FLASH=y
+CONFIG_SPI_FLASH=y
+CONFIG_SPI_FLASH_SPANSION=y
+CONFIG_FSL_SPI_ALIGNED_TXFIFO=y
+CONFIG_NETDEVICES=y
+CONFIG_E1000=y
+CONFIG_MII=y
+CONFIG_PCI=y
+CONFIG_DM_PCI=y
+CONFIG_DM_PCI_COMPAT=y
+CONFIG_PCIE_LAYERSCAPE=y
+CONFIG_SYS_NS16550=y
+CONFIG_SPI=y
+CONFIG_DM_SPI=y
+CONFIG_FSL_DSPI=y
+CONFIG_FSL_QSPI=y
+CONFIG_FSL_LS_PPA=y
+CONFIG_PARTITIONS=y
+# CONFIG_DISPLAY_BOARDINFO is not set
+CONFIG_DISTRO_DEFAULTS=y
+CONFIG_TERRAGRAPH=y
+CONFIG_CMD_GPIO=y
+CONFIG_WDT_SP805=y
+CONFIG_CMD_GPT=y
+CONFIG_SYS_LS_PPA_FW_ADDR=0x200D0000
+CONFIG_CONS_INDEX=2
diff --git a/configs/ls1048atg_sdcard_qspi_defconfig b/configs/ls1048atg_sdcard_qspi_defconfig
index fbb9aeb508..686439de80 100644
--- a/configs/ls1048atg_sdcard_qspi_defconfig
+++ b/configs/ls1048atg_sdcard_qspi_defconfig
@@ -1,5 +1,5 @@
 CONFIG_ARM=y
-CONFIG_TARGET_LS1088ARDB=y
+CONFIG_TARGET_LS1048ATG=y
 CONFIG_SYS_TEXT_BASE=0x80400000
 CONFIG_SPL_LIBCOMMON_SUPPORT=y
 CONFIG_SPL_LIBGENERIC_SUPPORT=y
@@ -9,6 +9,7 @@ CONFIG_SPL_SERIAL_SUPPORT=y
 CONFIG_SPL_DRIVERS_MISC_SUPPORT=y
 CONFIG_SPL=y
 CONFIG_DISTRO_DEFAULTS=y
+CONFIG_TERRAGRAPH=y
 CONFIG_NR_DRAM_BANKS=2
 # CONFIG_SYS_MALLOC_F is not set
 CONFIG_FIT_VERBOSE=y
@@ -32,10 +33,13 @@ CONFIG_CMD_I2C=y
 CONFIG_CMD_MMC=y
 CONFIG_CMD_SF=y
 CONFIG_CMD_USB=y
+CONFIG_CMD_GPIO=y
+CONFIG_WDT_SP805=y
+CONFIG_CMD_GPT=y
 # CONFIG_CMD_SETEXPR is not set
 CONFIG_MP=y
 CONFIG_OF_CONTROL=y
-CONFIG_DEFAULT_DEVICE_TREE="fsl-ls1088a-rdb"
+CONFIG_DEFAULT_DEVICE_TREE="fsl-ls1048a-tg"
 CONFIG_ENV_IS_IN_MMC=y
 CONFIG_NET_RANDOM_ETHADDR=y
 CONFIG_DM=y
diff --git a/drivers/net/ldpaa_eth/ldpaa_eth.c b/drivers/net/ldpaa_eth/ldpaa_eth.c
index fc732c7be9..ad224167c0 100644
--- a/drivers/net/ldpaa_eth/ldpaa_eth.c
+++ b/drivers/net/ldpaa_eth/ldpaa_eth.c
@@ -467,9 +467,7 @@ static int ldpaa_eth_open(struct eth_device *net_dev, bd_t *bd)
 {
 	struct ldpaa_eth_priv *priv = (struct ldpaa_eth_priv *)net_dev->priv;
 	struct dpmac_link_state	dpmac_link_state = { 0 };
-#ifdef DEBUG
 	struct dpni_link_state link_state;
-#endif
 	int err = 0;
 	struct dpni_queue d_queue;
 
@@ -534,7 +532,6 @@ static int ldpaa_eth_open(struct eth_device *net_dev, bd_t *bd)
 		return err;
 	}
 
-#ifdef DEBUG
 	printf("DPMAC link status: %d - ", dpmac_link_state.up);
 	dpmac_link_state.up == 0 ? printf("down\n") :
 	dpmac_link_state.up == 1 ? printf("up\n") : printf("error state\n");
@@ -549,7 +546,6 @@ static int ldpaa_eth_open(struct eth_device *net_dev, bd_t *bd)
 	printf("DPNI link status: %d - ", link_state.up);
 	link_state.up == 0 ? printf("down\n") :
 	link_state.up == 1 ? printf("up\n") : printf("error state\n");
-#endif
 
 	memset(&d_queue, 0, sizeof(struct dpni_queue));
 	err = dpni_get_queue(dflt_mc_io, MC_CMD_NO_FLAGS,
diff --git a/include/configs/ls1048atg.h b/include/configs/ls1048atg.h
index 335135e8de..a73080dbbb 100644
--- a/include/configs/ls1048atg.h
+++ b/include/configs/ls1048atg.h
@@ -3,11 +3,21 @@
  * Copyright 2017 NXP
  */
 
-#ifndef __LS1088A_RDB_H
-#define __LS1088A_RDB_H
+#ifndef __LS1048A_TG_H
+#define __LS1048A_TG_H
 
 #include "ls1088a_common.h"
 
+/* Override defaults that differ from ones in ls1088a_common.h */
+#undef CONFIG_MAX_CPUS
+#define CONFIG_MAX_CPUS 4
+
+#undef CONFIG_SYS_TEXT_BASE
+#define CONFIG_SYS_TEXT_BASE            0x20010000
+
+#undef CONFIG_CONS_INDEX
+#define CONFIG_CONS_INDEX 2
+
 #ifdef CONFIG_TFABOOT
 #define CONFIG_SYS_MMC_ENV_DEV		0
 
@@ -20,6 +30,11 @@
 #if defined(CONFIG_QSPI_BOOT)
 #define CONFIG_ENV_SIZE			0x2000          /* 8KB */
 #define CONFIG_ENV_SECT_SIZE		0x40000
+#undef CONFIG_ENV_OFFSET
+#define CONFIG_ENV_OFFSET		0xe0000
+#undef CONFIG_ENV_ADDR
+#define CONFIG_ENV_ADDR			(CONFIG_SYS_FSL_QSPI_BASE + \
+					 CONFIG_ENV_OFFSET)
 #elif defined(CONFIG_SD_BOOT)
 #define CONFIG_ENV_OFFSET		(3 * 1024 * 1024)
 #define CONFIG_SYS_MMC_ENV_DEV		0
@@ -34,9 +49,6 @@
 
 #if defined(CONFIG_TFABOOT) || \
 	defined(CONFIG_QSPI_BOOT) || defined(CONFIG_SD_BOOT_QSPI)
-#ifndef CONFIG_SPL_BUILD
-#define CONFIG_QIXIS_I2C_ACCESS
-#endif
 #define SYS_NO_FLASH
 #undef CONFIG_CMD_IMLS
 #endif
@@ -60,213 +72,16 @@
 #define CONFIG_SYS_SPD_BUS_NUM	0	/* SPD on I2C bus 0 */
 #define CONFIG_DIMM_SLOTS_PER_CTLR	1
 
+/* I2C Addresses */
+#define I2C_RETIMER_ADDR	0x18
+#define I2C_CH_DEFAULT		0x1
 
-#if !defined(CONFIG_QSPI_BOOT) && !defined(CONFIG_SD_BOOT_QSPI)
-#define CONFIG_SYS_NOR0_CSPR_EXT	(0x0)
-#define CONFIG_SYS_NOR_AMASK		IFC_AMASK(128 * 1024 * 1024)
-#define CONFIG_SYS_NOR_AMASK_EARLY	IFC_AMASK(64 * 1024 * 1024)
-
-#define CONFIG_SYS_NOR0_CSPR					\
-	(CSPR_PHYS_ADDR(CONFIG_SYS_FLASH_BASE_PHYS)		| \
-	CSPR_PORT_SIZE_16					| \
-	CSPR_MSEL_NOR						| \
-	CSPR_V)
-#define CONFIG_SYS_NOR0_CSPR_EARLY				\
-	(CSPR_PHYS_ADDR(CONFIG_SYS_FLASH_BASE_PHYS_EARLY)	| \
-	CSPR_PORT_SIZE_16					| \
-	CSPR_MSEL_NOR						| \
-	CSPR_V)
-#define CONFIG_SYS_NOR_CSOR	CSOR_NOR_ADM_SHIFT(6)
-#define CONFIG_SYS_NOR_FTIM0	(FTIM0_NOR_TACSE(0x1) | \
-				FTIM0_NOR_TEADC(0x1) | \
-				FTIM0_NOR_TEAHC(0x1))
-#define CONFIG_SYS_NOR_FTIM1	(FTIM1_NOR_TACO(0x1) | \
-				FTIM1_NOR_TRAD_NOR(0x1))
-#define CONFIG_SYS_NOR_FTIM2	(FTIM2_NOR_TCS(0x0) | \
-				FTIM2_NOR_TCH(0x0) | \
-				FTIM2_NOR_TWP(0x1))
-#define CONFIG_SYS_NOR_FTIM3	0x04000000
-#define CONFIG_SYS_IFC_CCR	0x01000000
-
-#ifndef SYS_NO_FLASH
-#define CONFIG_FLASH_CFI_DRIVER
-#define CONFIG_SYS_FLASH_CFI
-#define CONFIG_SYS_FLASH_USE_BUFFER_WRITE
-#define CONFIG_SYS_FLASH_QUIET_TEST
-#define CONFIG_FLASH_SHOW_PROGRESS	45 /* count down from 45/5: 9..1 */
-
-#define CONFIG_SYS_MAX_FLASH_BANKS	1	/* number of banks */
-#define CONFIG_SYS_MAX_FLASH_SECT	1024	/* sectors per device */
-#define CONFIG_SYS_FLASH_ERASE_TOUT	60000	/* Flash Erase Timeout (ms) */
-#define CONFIG_SYS_FLASH_WRITE_TOUT	500	/* Flash Write Timeout (ms) */
-
-#define CONFIG_SYS_FLASH_EMPTY_INFO
-#define CONFIG_SYS_FLASH_BANKS_LIST	{ CONFIG_SYS_FLASH_BASE }
-#endif
-#endif
-
-#ifndef SPL_NO_IFC
-#define CONFIG_NAND_FSL_IFC
-#endif
-
-#define CONFIG_SYS_NAND_MAX_ECCPOS	256
-#define CONFIG_SYS_NAND_MAX_OOBFREE	2
-
-#define CONFIG_SYS_NAND_CSPR_EXT	(0x0)
-#define CONFIG_SYS_NAND_CSPR	(CSPR_PHYS_ADDR(CONFIG_SYS_NAND_BASE_PHYS) \
-				| CSPR_PORT_SIZE_8 /* Port Size = 8 bit */ \
-				| CSPR_MSEL_NAND	/* MSEL = NAND */ \
-				| CSPR_V)
-#define CONFIG_SYS_NAND_AMASK	IFC_AMASK(64 * 1024)
-
-#define CONFIG_SYS_NAND_CSOR    (CSOR_NAND_ECC_ENC_EN   /* ECC on encode */ \
-				| CSOR_NAND_ECC_DEC_EN  /* ECC on decode */ \
-				| CSOR_NAND_ECC_MODE_4  /* 4-bit ECC */ \
-				| CSOR_NAND_RAL_3	/* RAL = 3Byes */ \
-				| CSOR_NAND_PGS_2K	/* Page Size = 2K */ \
-				| CSOR_NAND_SPRZ_64/* Spare size = 64 */ \
-				| CSOR_NAND_PB(64))	/*Pages Per Block = 64*/
-
-#define CONFIG_SYS_NAND_ONFI_DETECTION
-
-/* ONFI NAND Flash mode0 Timing Params */
-#define CONFIG_SYS_NAND_FTIM0		(FTIM0_NAND_TCCST(0x07) | \
-					FTIM0_NAND_TWP(0x18)   | \
-					FTIM0_NAND_TWCHT(0x07) | \
-					FTIM0_NAND_TWH(0x0a))
-#define CONFIG_SYS_NAND_FTIM1		(FTIM1_NAND_TADLE(0x32) | \
-					FTIM1_NAND_TWBE(0x39)  | \
-					FTIM1_NAND_TRR(0x0e)   | \
-					FTIM1_NAND_TRP(0x18))
-#define CONFIG_SYS_NAND_FTIM2		(FTIM2_NAND_TRAD(0x0f) | \
-					FTIM2_NAND_TREH(0x0a) | \
-					FTIM2_NAND_TWHRE(0x1e))
-#define CONFIG_SYS_NAND_FTIM3		0x0
-
-#define CONFIG_SYS_NAND_BASE_LIST	{ CONFIG_SYS_NAND_BASE }
-#define CONFIG_SYS_MAX_NAND_DEVICE	1
-#define CONFIG_MTD_NAND_VERIFY_WRITE
-#define CONFIG_CMD_NAND
-
-#define CONFIG_SYS_NAND_BLOCK_SIZE	(128 * 1024)
-
-#ifndef SPL_NO_QIXIS
-#define CONFIG_FSL_QIXIS
-#endif
-
-#define CONFIG_SYS_I2C_FPGA_ADDR	0x66
-#define QIXIS_BRDCFG4_OFFSET            0x54
-#define QIXIS_LBMAP_SWITCH		2
-#define QIXIS_QMAP_MASK			0xe0
-#define QIXIS_QMAP_SHIFT		5
-#define QIXIS_LBMAP_MASK		0x1f
-#define QIXIS_LBMAP_SHIFT		5
-#define QIXIS_LBMAP_DFLTBANK		0x00
-#define QIXIS_LBMAP_ALTBANK		0x20
-#define QIXIS_LBMAP_SD			0x00
-#define QIXIS_LBMAP_EMMC		0x00
-#define QIXIS_LBMAP_SD_QSPI		0x00
-#define QIXIS_LBMAP_QSPI		0x00
-#define QIXIS_RCW_SRC_SD		0x40
-#define QIXIS_RCW_SRC_EMMC		0x41
-#define QIXIS_RCW_SRC_QSPI		0x62
-#define QIXIS_RST_CTL_RESET		0x31
-#define QIXIS_RCFG_CTL_RECONFIG_IDLE	0x20
-#define QIXIS_RCFG_CTL_RECONFIG_START	0x21
-#define QIXIS_RCFG_CTL_WATCHDOG_ENBLE	0x08
-#define	QIXIS_RST_FORCE_MEM		0x01
-
-#define CONFIG_SYS_FPGA_CSPR_EXT	(0x0)
-#define CONFIG_SYS_FPGA_CSPR		(CSPR_PHYS_ADDR(QIXIS_BASE_PHYS_EARLY) \
-					| CSPR_PORT_SIZE_8 \
-					| CSPR_MSEL_GPCM \
-					| CSPR_V)
-#define SYS_FPGA_CSPR_FINAL	(CSPR_PHYS_ADDR(QIXIS_BASE_PHYS) \
-					| CSPR_PORT_SIZE_8 \
-					| CSPR_MSEL_GPCM \
-					| CSPR_V)
-
-#define CONFIG_SYS_FPGA_AMASK		IFC_AMASK(64*1024)
-#define CONFIG_SYS_FPGA_CSOR		CSOR_GPCM_ADM_SHIFT(0)
-/* QIXIS Timing parameters*/
-#define SYS_FPGA_CS_FTIM0	(FTIM0_GPCM_TACSE(0x0e) | \
-					FTIM0_GPCM_TEADC(0x0e) | \
-					FTIM0_GPCM_TEAHC(0x0e))
-#define SYS_FPGA_CS_FTIM1	(FTIM1_GPCM_TACO(0xff) | \
-					FTIM1_GPCM_TRAD(0x3f))
-#define SYS_FPGA_CS_FTIM2	(FTIM2_GPCM_TCS(0xf) | \
-					FTIM2_GPCM_TCH(0xf) | \
-					FTIM2_GPCM_TWP(0x3E))
-#define SYS_FPGA_CS_FTIM3	0x0
-
-#if defined(CONFIG_TFABOOT) || \
-	defined(CONFIG_QSPI_BOOT) || defined(CONFIG_SD_BOOT_QSPI)
-#define CONFIG_SYS_CSPR0_EXT		CONFIG_SYS_NAND_CSPR_EXT
-#define CONFIG_SYS_CSPR0		CONFIG_SYS_NAND_CSPR
-#define CONFIG_SYS_AMASK0		CONFIG_SYS_NAND_AMASK
-#define CONFIG_SYS_CSOR0		CONFIG_SYS_NAND_CSOR
-#define CONFIG_SYS_CS0_FTIM0		CONFIG_SYS_NAND_FTIM0
-#define CONFIG_SYS_CS0_FTIM1		CONFIG_SYS_NAND_FTIM1
-#define CONFIG_SYS_CS0_FTIM2		CONFIG_SYS_NAND_FTIM2
-#define CONFIG_SYS_CS0_FTIM3		CONFIG_SYS_NAND_FTIM3
-#define CONFIG_SYS_CSPR2_EXT		CONFIG_SYS_FPGA_CSPR_EXT
-#define CONFIG_SYS_CSPR2		CONFIG_SYS_FPGA_CSPR
-#define CONFIG_SYS_CSPR2_FINAL		SYS_FPGA_CSPR_FINAL
-#define CONFIG_SYS_AMASK2		CONFIG_SYS_FPGA_AMASK
-#define CONFIG_SYS_CSOR2		CONFIG_SYS_FPGA_CSOR
-#define CONFIG_SYS_CS2_FTIM0		SYS_FPGA_CS_FTIM0
-#define CONFIG_SYS_CS2_FTIM1		SYS_FPGA_CS_FTIM1
-#define CONFIG_SYS_CS2_FTIM2		SYS_FPGA_CS_FTIM2
-#define CONFIG_SYS_CS2_FTIM3		SYS_FPGA_CS_FTIM3
-#else
-#define CONFIG_SYS_CSPR0_EXT		CONFIG_SYS_NOR0_CSPR_EXT
-#define CONFIG_SYS_CSPR0		CONFIG_SYS_NOR0_CSPR_EARLY
-#define CONFIG_SYS_CSPR0_FINAL		CONFIG_SYS_NOR0_CSPR
-#define CONFIG_SYS_AMASK0		CONFIG_SYS_NOR_AMASK
-#define CONFIG_SYS_CSOR0		CONFIG_SYS_NOR_CSOR
-#define CONFIG_SYS_CS0_FTIM0		CONFIG_SYS_NOR_FTIM0
-#define CONFIG_SYS_CS0_FTIM1		CONFIG_SYS_NOR_FTIM1
-#define CONFIG_SYS_CS0_FTIM2		CONFIG_SYS_NOR_FTIM2
-#define CONFIG_SYS_CS0_FTIM3		CONFIG_SYS_NOR_FTIM3
-#endif
+/* no qixis */
+#define SPL_NO_QIXIS
+#undef CONFIG_FSL_QIXIS
 
 #define CONFIG_SYS_LS_MC_BOOT_TIMEOUT_MS 5000
 
-#define I2C_MUX_CH_VOL_MONITOR          0xA
-/* Voltage monitor on channel 2*/
-#define I2C_VOL_MONITOR_ADDR           0x63
-#define I2C_VOL_MONITOR_BUS_V_OFFSET   0x2
-#define I2C_VOL_MONITOR_BUS_V_OVF      0x1
-#define I2C_VOL_MONITOR_BUS_V_SHIFT    3
-#define I2C_SVDD_MONITOR_ADDR		0x4F
-
-#define CONFIG_VID_FLS_ENV              "ls1088ardb_vdd_mv"
-#define CONFIG_VID
-
-/* The lowest and highest voltage allowed for LS1088ARDB */
-#define VDD_MV_MIN			819
-#define VDD_MV_MAX			1212
-
-#define CONFIG_VOL_MONITOR_LTC3882_SET
-#define CONFIG_VOL_MONITOR_LTC3882_READ
-
-/* PM Bus commands code for LTC3882*/
-#define PMBUS_CMD_PAGE                  0x0
-#define PMBUS_CMD_READ_VOUT             0x8B
-#define PMBUS_CMD_PAGE_PLUS_WRITE       0x05
-#define PMBUS_CMD_VOUT_COMMAND          0x21
-
-#define PWM_CHANNEL0                    0x0
-
-/*
- * I2C bus multiplexer
- */
-#define I2C_MUX_PCA_ADDR_PRI		0x77
-#define I2C_MUX_PCA_ADDR_SEC		0x76 /* Secondary multiplexer */
-#define I2C_RETIMER_ADDR		0x18
-#define I2C_MUX_CH_DEFAULT		0x8
-#define I2C_MUX_CH5			0xD
-
 #ifndef SPL_NO_RTC
 /*
 * RTC configuration
@@ -278,21 +93,21 @@
 #endif
 
 /* EEPROM */
-#define CONFIG_ID_EEPROM
-#define CONFIG_SYS_I2C_EEPROM_NXID
-#define CONFIG_SYS_EEPROM_BUS_NUM		0
-#define CONFIG_SYS_I2C_EEPROM_ADDR		0x57
+#define CONFIG_SYS_EEPROM_BUS_NUM		2
+#define CONFIG_SYS_I2C_EEPROM_ADDR		0x5C
 #define CONFIG_SYS_I2C_EEPROM_ADDR_LEN		1
 #define CONFIG_SYS_EEPROM_PAGE_WRITE_BITS	3
 #define CONFIG_SYS_EEPROM_PAGE_WRITE_DELAY_MS	5
 
 #ifndef SPL_NO_QSPI
 /* QSPI device */
-#if defined(CONFIG_TFABOOT) || \
-	defined(CONFIG_QSPI_BOOT) || defined(CONFIG_SD_BOOT_QSPI)
-#define FSL_QSPI_FLASH_SIZE		(1 << 26)
-#define FSL_QSPI_FLASH_NUM		2
-#endif
+#undef CONFIG_FSL_QSPI
+#define CONFIG_FSL_QSPI
+#undef CONFIG_SPI_FLASH_SPANSION
+#define CONFIG_SPI_FLASH_WINBOND
+#define CONFIG_SPI_FLASH_ATMEL
+#define FSL_QSPI_FLASH_SIZE    SZ_2M
+#define FSL_QSPI_FLASH_NUM   1
 #endif
 
 #define CONFIG_CMD_MEMINFO
@@ -309,268 +124,74 @@
 
 #ifndef SPL_NO_ENV
 /* Initial environment variables */
-#ifdef CONFIG_TFABOOT
-#define QSPI_MC_INIT_CMD				\
-	"sf probe 0:0;sf read 0x80000000 0xA00000 0x100000;"	\
-	"sf read 0x80100000 0xE00000 0x100000;"				\
-	"env exists secureboot && "			\
-	"sf read 0x80700000 0x700000 0x40000 && "	\
-	"sf read 0x80740000 0x740000 0x40000 && "	\
-	"esbc_validate 0x80700000 && "			\
-	"esbc_validate 0x80740000 ;"			\
-	"fsl_mc start mc 0x80000000 0x80100000\0"
-#define SD_MC_INIT_CMD				\
-	"mmcinfo;mmc read 0x80000000 0x5000 0x800;"		\
-	"mmc read 0x80100000 0x7000 0x800;"				\
-	"env exists secureboot && "			\
-	"mmc read 0x80700000 0x3800 0x10 && "		\
-	"mmc read 0x80740000 0x3A00 0x10 && "		\
-	"esbc_validate 0x80700000 && "			\
-	"esbc_validate 0x80740000 ;"			\
-	"fsl_mc start mc 0x80000000 0x80100000\0"
-#else
-#if defined(CONFIG_QSPI_BOOT)
-#define MC_INIT_CMD				\
-	"mcinitcmd=sf probe 0:0;sf read 0x80000000 0xA00000 0x100000;"	\
-	"sf read 0x80100000 0xE00000 0x100000;"				\
-	"env exists secureboot && "			\
-	"sf read 0x80700000 0x700000 0x40000 && "	\
-	"sf read 0x80740000 0x740000 0x40000 && "	\
-	"esbc_validate 0x80700000 && "			\
-	"esbc_validate 0x80740000 ;"			\
-	"fsl_mc start mc 0x80000000 0x80100000\0"	\
-	"mcmemsize=0x70000000\0"
-#elif defined(CONFIG_SD_BOOT)
-#define MC_INIT_CMD				\
-	"mcinitcmd=mmcinfo;mmc read 0x80000000 0x5000 0x800;"		\
-	"mmc read 0x80100000 0x7000 0x800;"				\
-	"env exists secureboot && "			\
-	"mmc read 0x80700000 0x3800 0x10 && "		\
-	"mmc read 0x80740000 0x3A00 0x10 && "		\
-	"esbc_validate 0x80700000 && "			\
-	"esbc_validate 0x80740000 ;"			\
-	"fsl_mc start mc 0x80000000 0x80100000\0"	\
-	"mcmemsize=0x70000000\0"
-#endif
-#endif /* CONFIG_TFABOOT */
+#ifdef CONFIG_TERRAGRAPH
+
+/*
+ * Partitions to use in eMMC
+ */
+#define TG_MMC_PARTITIONS "partitions="         \
+	"name=rootfs1,size=1GiB,start=1MiB;"    \
+	"name=rootfs2,size=1GiB;"               \
+	"name=recovery,size=1GiB;"              \
+	"name=data,size=0\0"                    \
+
+#define TG_SPI_PARTITIONS "tg_mtdparts="        \
+	"1944K@0(allboot),"                     \
+	"64K@0(rcw),"                           \
+	"768K(u-boot),"                         \
+	"64k(ppa),"                             \
+	"8K(u-boot-env),"                       \
+	"8K(dpl),"                              \
+	"8K(dpc),"                              \
+	"1024K(MC)\0"
+
+/*
+ * Some Terragraph specific variables for this platform for testcode support.
+ * mtd below in names is bogus. We don't use mtd for this platform. Used just
+ * as an identifier for a partition. This is due to compatibility with older
+ * platforms which used mtd.
+ *
+ * Unset fdt_high, if not fdt used in place which is causing issues.
+ */
+#define TG_ENV_SETTINGS \
+	"tg_mtd_a=1\0"         \
+	"tg_mtd_b=2\0"         \
+	"tg_mtd_recovery=3\0"  \
+	"tg_rootfs_mtd=1\0"    \
+	"tg_fitimage_conf=2\0" \
+	"tg_bootargs_mmc=setenv bootargs console=ttyS0,115200 earlycon=uart8250,mmio,0x21c0600 rootfstype=ext4 root=/dev/mmcblk0p${tg_active_mtd} rw rootwait lpj=250000 mtdparts=20c0000.quadspi:${tg_mtdparts} ${tg_extra_kernel_args}\0" \
+	"tg_load_mc=sf probe 0; sf read 0x80000000 0xe6000 0x100000; sf read 0x80100000 0xe4000 0x2000; fsl_mc start mc 0x80000000 0x80100000\0" \
+	"tg_apply_mc_dpl=sf read 0x80200000 0xe2000 0x2000; fsl_mc apply dpl 0x80200000\0" \
+	"tg_bootcmd_mmc=setenv loadaddr 0x8f000000; ext4load mmc 0:${tg_active_mtd} $loadaddr /boot/fitImage; run tg_bootargs_mmc; setenv fdt_high ; bootm $loadaddr#conf@${tg_fitimage_conf}\0" \
+	"tg_bootcmd=run tg_load_mc; run tg_apply_mc_dpl; tgFindMtdBootOrder; for part in ${tg_mtd_1} ${tg_mtd_2} ${tg_mtd_3}; do setenv tg_active_mtd ${part}; tgPrepareToBoot; run tg_bootcmd_mmc; done\0" \
+	"bootcmd=run tg_bootcmd\0" \
+	"tg_env_init=yes\0"
+
+#define CONFIG_LS10XXA_GPIO
+#undef CONFIG_RANDOM_UUID
+#define CONFIG_RANDOM_UUID
+
+#endif /* CONFIG_TERRAGRAPH */
 
 #undef CONFIG_EXTRA_ENV_SETTINGS
-#ifdef CONFIG_TFABOOT
-#define CONFIG_EXTRA_ENV_SETTINGS		\
-	"BOARD=ls1088ardb\0"			\
-	"hwconfig=fsl_ddr:bank_intlv=auto\0"	\
-	"ramdisk_addr=0x800000\0"		\
-	"ramdisk_size=0x2000000\0"		\
-	"fdt_high=0xa0000000\0"			\
-	"initrd_high=0xffffffffffffffff\0"	\
-	"fdt_addr=0x64f00000\0"			\
-	"kernel_addr=0x1000000\0"		\
-	"kernel_addr_sd=0x8000\0"		\
-	"kernelhdr_addr_sd=0x4000\0"		\
-	"kernel_start=0x580100000\0"		\
-	"kernelheader_start=0x580800000\0"	\
-	"scriptaddr=0x80000000\0"		\
-	"scripthdraddr=0x80080000\0"		\
-	"fdtheader_addr_r=0x80100000\0"		\
-	"kernelheader_addr=0x800000\0"		\
-	"kernelheader_addr_r=0x80200000\0"	\
-	"kernel_addr_r=0x81000000\0"		\
-	"kernelheader_size=0x40000\0"		\
-	"fdt_addr_r=0x90000000\0"		\
-	"load_addr=0xa0000000\0"		\
-	"kernel_size=0x2800000\0"		\
-	"kernel_size_sd=0x14000\0"		\
-	"kernelhdr_size_sd=0x10\0"		\
-	QSPI_MC_INIT_CMD			\
-	"mcmemsize=0x70000000\0"		\
-	BOOTENV					\
-	"boot_scripts=ls1088ardb_boot.scr\0"	\
-	"boot_script_hdr=hdr_ls1088ardb_bs.out\0"	\
-	"scan_dev_for_boot_part="		\
-		"part list ${devtype} ${devnum} devplist; "	\
-		"env exists devplist || setenv devplist 1; "	\
-		"for distro_bootpart in ${devplist}; do "	\
-			"if fstype ${devtype} "			\
-				"${devnum}:${distro_bootpart} "	\
-				"bootfstype; then "		\
-				"run scan_dev_for_boot; "	\
-			"fi; "					\
-		"done\0"					\
-	"scan_dev_for_boot="					\
-		"echo Scanning ${devtype} "			\
-		"${devnum}:${distro_bootpart}...; "		\
-		"for prefix in ${boot_prefixes}; do "		\
-			"run scan_dev_for_scripts; "		\
-		"done;\0"					\
-	"boot_a_script="					\
-		"load ${devtype} ${devnum}:${distro_bootpart} " \
-		"${scriptaddr} ${prefix}${script}; "		\
-	"env exists secureboot && load ${devtype} "		\
-		"${devnum}:${distro_bootpart} "			\
-		"${scripthdraddr} ${prefix}${boot_script_hdr}; "\
-		"env exists secureboot "			\
-		"&& esbc_validate ${scripthdraddr};"		\
-		"source ${scriptaddr}\0"			\
-	"installer=load mmc 0:2 $load_addr "			\
-		"/flex_installer_arm64.itb; "			\
-		"env exists mcinitcmd && run mcinitcmd && "	\
-		"mmc read 0x80001000 0x6800 0x800;"		\
-		"fsl_mc lazyapply dpl 0x80001000;"			\
-		"bootm $load_addr#ls1088ardb\0"			\
-	"qspi_bootcmd=echo Trying load from qspi..;"		\
-		"sf probe && sf read $load_addr "		\
-		"$kernel_addr $kernel_size ; env exists secureboot "	\
-		"&& sf read $kernelheader_addr_r $kernelheader_addr "	\
-		"$kernelheader_size && esbc_validate ${kernelheader_addr_r}; "\
-		"bootm $load_addr#$BOARD\0"			\
-		"sd_bootcmd=echo Trying load from sd card..;"		\
-		"mmcinfo; mmc read $load_addr "			\
-		"$kernel_addr_sd $kernel_size_sd ;"		\
-		"env exists secureboot && mmc read $kernelheader_addr_r "\
-		"$kernelhdr_addr_sd $kernelhdr_size_sd "	\
-		" && esbc_validate ${kernelheader_addr_r};"	\
-		"bootm $load_addr#$BOARD\0"
-#else
 #define CONFIG_EXTRA_ENV_SETTINGS		\
-	"BOARD=ls1088ardb\0"			\
-	"hwconfig=fsl_ddr:bank_intlv=auto\0"	\
-	"ramdisk_addr=0x800000\0"		\
-	"ramdisk_size=0x2000000\0"		\
-	"fdt_high=0xa0000000\0"			\
-	"initrd_high=0xffffffffffffffff\0"	\
-	"fdt_addr=0x64f00000\0"			\
-	"kernel_addr=0x1000000\0"		\
-	"kernel_addr_sd=0x8000\0"		\
-	"kernelhdr_addr_sd=0x4000\0"		\
-	"kernel_start=0x580100000\0"		\
-	"kernelheader_start=0x580800000\0"	\
-	"scriptaddr=0x80000000\0"		\
-	"scripthdraddr=0x80080000\0"		\
-	"fdtheader_addr_r=0x80100000\0"		\
-	"kernelheader_addr=0x800000\0"		\
-	"kernelheader_addr_r=0x80200000\0"	\
-	"kernel_addr_r=0x81000000\0"		\
-	"kernelheader_size=0x40000\0"		\
-	"fdt_addr_r=0x90000000\0"		\
-	"load_addr=0xa0000000\0"		\
-	"kernel_size=0x2800000\0"		\
-	"kernel_size_sd=0x14000\0"		\
-	"kernelhdr_size_sd=0x10\0"		\
-	MC_INIT_CMD				\
-	BOOTENV					\
-	"boot_scripts=ls1088ardb_boot.scr\0"	\
-	"boot_script_hdr=hdr_ls1088ardb_bs.out\0"	\
-	"scan_dev_for_boot_part="		\
-		"part list ${devtype} ${devnum} devplist; "	\
-		"env exists devplist || setenv devplist 1; "	\
-		"for distro_bootpart in ${devplist}; do "	\
-			"if fstype ${devtype} "			\
-				"${devnum}:${distro_bootpart} "	\
-				"bootfstype; then "		\
-				"run scan_dev_for_boot; "	\
-			"fi; "					\
-		"done\0"					\
-	"scan_dev_for_boot="					\
-		"echo Scanning ${devtype} "			\
-		"${devnum}:${distro_bootpart}...; "		\
-		"for prefix in ${boot_prefixes}; do "		\
-			"run scan_dev_for_scripts; "		\
-		"done;\0"					\
-	"boot_a_script="					\
-		"load ${devtype} ${devnum}:${distro_bootpart} " \
-		"${scriptaddr} ${prefix}${script}; "		\
-	"env exists secureboot && load ${devtype} "		\
-		"${devnum}:${distro_bootpart} "			\
-		"${scripthdraddr} ${prefix}${boot_script_hdr} " \
-		"&& esbc_validate ${scripthdraddr};"		\
-		"source ${scriptaddr}\0"			\
-	"installer=load mmc 0:2 $load_addr "			\
-		"/flex_installer_arm64.itb; "			\
-		"env exists mcinitcmd && run mcinitcmd && "	\
-		"mmc read 0x80001000 0x6800 0x800;"		\
-		"fsl_mc lazyapply dpl 0x80001000;"			\
-		"bootm $load_addr#ls1088ardb\0"			\
-	"qspi_bootcmd=echo Trying load from qspi..;"		\
-		"sf probe && sf read $load_addr "		\
-		"$kernel_addr $kernel_size ; env exists secureboot "	\
-		"&& sf read $kernelheader_addr_r $kernelheader_addr "	\
-		"$kernelheader_size && esbc_validate ${kernelheader_addr_r}; "\
-		"bootm $load_addr#$BOARD\0"			\
-		"sd_bootcmd=echo Trying load from sd card..;"		\
-		"mmcinfo; mmc read $load_addr "			\
-		"$kernel_addr_sd $kernel_size_sd ;"		\
-		"env exists secureboot && mmc read $kernelheader_addr_r "\
-		"$kernelhdr_addr_sd $kernelhdr_size_sd "	\
-		" && esbc_validate ${kernelheader_addr_r};"	\
-		"bootm $load_addr#$BOARD\0"
-#endif /* CONFIG_TFABOOT */
-
-#undef CONFIG_BOOTCOMMAND
-#ifdef CONFIG_TFABOOT
-#define QSPI_NOR_BOOTCOMMAND					\
-		"sf read 0x80001000 0xd00000 0x100000;"		\
-		"env exists mcinitcmd && env exists secureboot "	\
-		" && sf read 0x80780000 0x780000 0x100000 "	\
-		"&& esbc_validate 0x80780000;env exists mcinitcmd "	\
-		"&& fsl_mc lazyapply dpl 0x80001000;"		\
-		"run distro_bootcmd;run qspi_bootcmd;"		\
-		"env exists secureboot && esbc_halt;"
-#define SD_BOOTCOMMAND						\
-		"env exists mcinitcmd && mmcinfo; "		\
-		"mmc read 0x80001000 0x6800 0x800; "		\
-		"env exists mcinitcmd && env exists secureboot "	\
-		" && mmc read 0x80780000 0x3C00 0x10 "		\
-		"&& esbc_validate 0x80780000;env exists mcinitcmd "	\
-		"&& fsl_mc lazyapply dpl 0x80001000;"		\
-		"run distro_bootcmd;run sd_bootcmd;"		\
-		"env exists secureboot && esbc_halt;"
-#else
-#if defined(CONFIG_QSPI_BOOT)
-/* Try to boot an on-QSPI kernel first, then do normal distro boot */
-#define CONFIG_BOOTCOMMAND                                      \
-		"sf read 0x80001000 0xd00000 0x100000;"		\
-		"env exists mcinitcmd && env exists secureboot "	\
-		" && sf read 0x80780000 0x780000 0x100000 "	\
-		"&& esbc_validate 0x80780000;env exists mcinitcmd "	\
-		"&& fsl_mc lazyapply dpl 0x80001000;"		\
-		"run distro_bootcmd;run qspi_bootcmd;"		\
-		"env exists secureboot && esbc_halt;"
-
-/* Try to boot an on-SD kernel first, then do normal distro boot */
-#elif defined(CONFIG_SD_BOOT)
-#define CONFIG_BOOTCOMMAND                                      \
-		"env exists mcinitcmd && mmcinfo; "		\
-		"mmc read 0x80001000 0x6800 0x800; "		\
-		"env exists mcinitcmd && env exists secureboot "	\
-		" && mmc read 0x80780000 0x3C00 0x10 "		\
-		"&& esbc_validate 0x80780000;env exists mcinitcmd "	\
-		"&& fsl_mc lazyapply dpl 0x80001000;"		\
-		"run distro_bootcmd;run sd_bootcmd;"		\
-		"env exists secureboot && esbc_halt;"
-#endif
-#endif /* CONFIG_TFABOOT */
+	TG_ENV_SETTINGS                    \
+	TG_MMC_PARTITIONS                  \
+	TG_SPI_PARTITIONS                  \
+	"\0"
 
 /* MAC/PHY configuration */
+#undef CONFIG_RESET_PHY_R
+#define CONFIG_RESET_PHY_R
 #ifdef CONFIG_FSL_MC_ENET
 #define CONFIG_PHYLIB_10G
 #define CONFIG_PHY_GIGE
 #define CONFIG_PHYLIB
 
-#define CONFIG_PHY_VITESSE
-#define CONFIG_PHY_AQUANTIA
-#define AQ_PHY_ADDR1			0x00
-#define AQR105_IRQ_MASK			0x00000004
-
-#define QSGMII1_PORT1_PHY_ADDR		0x0c
-#define QSGMII1_PORT2_PHY_ADDR		0x0d
-#define QSGMII1_PORT3_PHY_ADDR		0x0e
-#define QSGMII1_PORT4_PHY_ADDR		0x0f
-#define QSGMII2_PORT1_PHY_ADDR		0x1c
-#define QSGMII2_PORT2_PHY_ADDR		0x1d
-#define QSGMII2_PORT3_PHY_ADDR		0x1e
-#define QSGMII2_PORT4_PHY_ADDR		0x1f
-
-#define CONFIG_ETHPRIME		"DPMAC1@xgmii"
+#define CONFIG_PHY_REALTEK
+#define PHY_ADDR			0x2
+
+#define CONFIG_ETHPRIME		"DPMAC7@sgmii"
 #define CONFIG_PHY_GIGE
 #endif
 #endif
@@ -578,17 +199,16 @@
 /*  MMC  */
 #ifdef CONFIG_MMC
 #define CONFIG_SYS_FSL_MMC_HAS_CAPBLT_VS33
+#define CONFIG_SUPPORT_EMMC_BOOT
 #endif
 
 #ifndef SPL_NO_ENV
 
 #define BOOT_TARGET_DEVICES(func) \
-	func(MMC, mmc, 0) \
-	func(SCSI, scsi, 0) \
-	func(DHCP, dhcp, na)
+	func(MMC, mmc, 0)
 #include <config_distro_bootcmd.h>
 #endif
 
 #include <asm/fsl_secure_boot.h>
 
-#endif /* __LS1088A_RDB_H */
+#endif /* __LS1048A_TG_H */
diff --git a/include/configs/ls1088a_common.h b/include/configs/ls1088a_common.h
index 1509292e18..a06c221b44 100644
--- a/include/configs/ls1088a_common.h
+++ b/include/configs/ls1088a_common.h
@@ -203,17 +203,20 @@ unsigned long long get_qixis_addr(void);
 
 #ifndef CONFIG_TFABOOT
 #if defined(CONFIG_QSPI_BOOT)
+#undef CONFIG_BOOTCOMMAND
 #define CONFIG_BOOTCOMMAND	"sf probe 0:0;" \
 				"sf read 0x80001000 0xd00000 0x100000;"\
 				" fsl_mc lazyapply dpl 0x80001000 &&" \
 				" sf read $kernel_load $kernel_start" \
 				" $kernel_size && bootm $kernel_load"
 #elif defined(CONFIG_SD_BOOT)
+#undef CONFIG_BOOTCOMMAND
 #define CONFIG_BOOTCOMMAND	"mmcinfo;mmc read 0x80001000 0x6800 0x800;"\
 				" fsl_mc lazyapply dpl 0x80001000 &&" \
 				" mmc read $kernel_load $kernel_start" \
 				" $kernel_size && bootm $kernel_load"
 #else /* NOR BOOT*/
+#undef CONFIG_BOOTCOMMAND
 #define CONFIG_BOOTCOMMAND	"fsl_mc lazyapply dpl 0x580d00000 &&" \
 				" cp.b $kernel_start $kernel_load" \
 				" $kernel_size && bootm $kernel_load"
-- 
2.17.1

